/*
Для того чтобы получить данные из нескольких таблиц, используется JOIN. В свою очередь они бывают разных видов.
Рассмотрим SELF JOIN.
SELF JOIN – это соединение, которое соединяет таблицу с самой собой.
Чтобы сформировать SELF JOIN, мы указываем одну и ту же таблицу 2 раза с разными псевдонимами таблиц указываем условие
объединения после ключевого слова ON.
SELF JOIN обычно используется для запроса иерархических данных. Например, рассматривая простейшую схему зависимости
работников друг от друга (у нас могут быть рядовые сотрудники и менеджеры), чтобы получить список сотрудников и их
руководителей – мы как раз и будем использовать SELF JOIN.

Для представленной ниже таблицы employee выполните запрос иерархических данных. При этом:
- столбец manager_id ссылается на столбец employee_id. Значение в первом показывает руководителя,
которому непосредственно подчиняется сотрудник.
- если значение в manager_id столбце равно null, то этот сотрудник никому не отчитывается. Другими словами,
это наш топ-менеджер.
В качестве псевдонимов используйте e (левая таблица) и m (правая таблица). В качестве условия объединения используйте
выражение m.employee_id = e.manager_id. Важно! В результатах выборки должен быть отражен топ-менеджер.
Результаты отсортируйте по m.name по возрастанию.
*/

CREATE TABLE employee (
    employee_id int primary key,
    name text,
    manager_id int references employee(employee_id)
);

INSERT INTO employees VALUES (1, 'Petr', null),
                             (2, 'Andrey', 1),
                             (3, 'Elena', 1),
                             (4, 'Anna', 2),
                             (5, 'Stas', 2),
                             (6, 'Sergey', 3),
                             (7, 'Alex', 3),
                             (8, 'Michael', 3);

SELECT e.name, m.name FROM employee AS e
LEFT JOIN employee AS m ON m.employee_id = e.manager_id
ORDER BY m.name ASC
