/*
GROUP BY позволяет разделить данные, которые возвращены с помощью SELECT на группы. При этом для каждой из групп можно
будет использовать агрегатные функции, например COUNT() для подсчета предметов в каждой из групп. Вместе с GROUP BY
можно использовать HAVING. Этот оператор позволяет указать какие группы будут включены в выходной результат. Т.е. просто
 выполняют фильтрацию групп. Но очень важно усвоить разницу между WHERE и HAVING - в отличие от WHERE оператор HAVING
 будет выполняться после группировки данных. Т.е. WHERE фильтрует строки, а HAVING - группы после их группировки. В
 одном запросе одновременно могут использоваться и WHERE и HAVING. Главное не забывать про порядок выполнения этих
 операторов. Синтаксис имеет следующий вид:

SELECT
    столбец_1,
    столбец_2,
    ...,
    aggregate_function(столбец_3)
FROM
    название_таблицы
WHERE
    условие_выборки
GROUP BY
    столбец_1,
    столбец_2,
    ...
HAVING
    условие_фильтрации_групп;

Необходимо учесть - любой столбец, который указан в SELECT
(столбец, который хранит результат вычисления агрегатных функций, не считается), должен быть указан после GROUP BY.

Необходимо найти продукты с количеством продаж (речь идет не о количестве проданных единиц товара) равным 2 в 2023 году
и вывести информацию о них. Должны быть выведены поля: id и название продукта.
Группировка будет по id и названию продукта.
*/

CREATE TABLE products
(
    id           SERIAL PRIMARY KEY,
    product_name VARCHAR(100),
    price        DECIMAL(10, 2)
);

INSERT INTO products (product_name, price)
VALUES ('Товар 1', 10.00),
       ('Товар 2', 15.50),
       ('Товар 3', 20.25),
       ('Товар 4', 25.75),
       ('Товар 5', 30.20);
